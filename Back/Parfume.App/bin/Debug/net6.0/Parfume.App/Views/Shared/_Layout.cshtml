@inject Parfume.App.Services.İnterfaces.ISettingService settingService
@{
	SettingFooter? setting = await settingService.Get();
	SettingNavbar? set = await settingService.GetAll();
}
@inject Parfume.App.Services.İnterfaces.IBasketService basketservice
@{
	List<Parfume.App.ViewModels.BasketItemViewModel> basketItemViewModels = await basketservice.GetAllBaskets();
	int TotalPrice = 0;

}

@if (!string.IsNullOrWhiteSpace((string)TempData["EmailRegex"]))
{
	<div style="display:none" id="message">@TempData["EmailRegex"]</div>
}

@if (!string.IsNullOrWhiteSpace((string)TempData["EmailNull"]))
{
	<div style="display:none" id="message">@TempData["EmailNull"]</div>
}

@if (!string.IsNullOrWhiteSpace((string)TempData["EmailRepeat"]))
{
	<div style="display:none" id="message">@TempData["EmailRepeat"]</div>
}

@if (!string.IsNullOrWhiteSpace((string)TempData["Subs"]))
{
	<div style="display:none" id="message">@TempData["Subs"]</div>
}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<link rel="preconnect" href="https://fonts.googleapis.com" />
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
	<link bordertps: //fonts.googleapis.com/css2?family =Space+Mono:ital,wght@0,400;0,700;1,400;1,700&family =Work+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display =swap"
		  rel="stylesheet" />
	<link rel="stylesheet"
		  href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css" />
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />

	<link rel="stylesheet" href="~/assets/css/style.css">

	<title>Document</title>

</head>
<body>
	<div class="root">
		<header class="navbar">
			<div class="navbar_container">
				<div class="navbar_top">
					<div class="navbar_left">
						<div class="navbar_menu">
							<a>
								<img src="~/assets/images/@set?.Delete"
									 id="sidebarDelete"
									 class="hideImage"
									 style="margin-top: 6px" />
								<img src="~/assets/images/@set?.Hamburger"
									 id="burger"
									 class="addimage" />
							</a>

							<a class="hide" id="menu">Menu</a>
							<a asp-controller="home" asp-action="index">
								<img class="hidden" src="~/assets/images/@set?.Logo" />
							</a>
						</div>
					</div>
					<div class="navbar_middle">
						<a asp-controller="home" asp-action="index"> <img src="~/assets/images/@set?.Logo" /></a>
					</div>
					<div class="navbar_right">
						<div class="navbar_icons">

							@if (User.Identity.IsAuthenticated && User.IsInRole("User"))
							{
								<a asp-controller="account"
							   asp-action="info">@Html.Raw(set?.Icon1) <span style="margin-left:0px">@User.Identity.Name</span></a>
								<a asp-controller="account"
							   asp-action="logout"> <i class="fa-solid fa-arrow-right-from-bracket"></i> <span style="margin-left:0px">LogOut</span></a>

							}
							else
							{
								<a asp-controller="account"
							   asp-action="login">
									@Html.Raw(set?.Icon1)<span style="margin-left:5px">Login</span>
								</a>
								<a asp-controller="account"
							   asp-action="register">
									@Html.Raw(set?.Icon2)<span style="margin-left:5px">Register</span>
								</a>

							}
							<a id="basketclick">
								@Html.Raw(set?.Icon3)<span style="margin-left:5px">Basket</span>
							</a>

							<div class="basket_header_inner">
								<div class="basketItems ">
									@foreach (var item in basketItemViewModels)
									{
										
										{
											TotalPrice += @item.Count * @item.Price;
										}
										
										<div class="basketItem unvis">
											<div class="item_left">
												<img src="~/assets/images/@item.Image" />
											</div>
											<div class="item_right">
												<div class="spans">
													<span>@item.Name</span>
													<span></span>
													<span>
														@item.Count * @item.Price
												
													</span>
												</div>
												<div class="deleteimage">
													<a asp-controller="parfume" asp-action="RemoveBasket" asp-route-id="@item.ParfumId">
														<i class="fa-solid fa-x"></i>
													</a>
												</div>
											</div>
										</div>
									}
								</div>
								<div class="basket_buttons ">
									<span>Total:@TotalPrice</span>


									<div class="buttonsBasketDiv">
										<a asp-action="index" asp-controller="legacy"><button>Resmilesdir</button></a>
										<a asp-action="checkout" asp-controller="order"><button>Sebet</button></a>
									</div>

								</div>
							</div>

						</div>
					</div>
				</div>
				<div class="hideDiv navbar_bottom">
					<a asp-controller="about" asp-action="index"><h1 class="visible">@set?.SiderbarP1</h1></a>
					<a asp-controller="parfume" asp-action="index"><h1 class="visible">@set?.SiderbarP2</h1></a>
					<a asp-controller="smoke" asp-action="index"><h1 class="visible">@set?.SiderbarP3</h1></a>
					<a asp-controller="giftbox" asp-action="index"><h1 class="visible">@set?.SiderbarP4</h1></a>
					<a asp-controller="tester" asp-action="index"><h1 class="visible">@set?.SiderbarP5</h1></a>
					<a asp-controller="contact" asp-action="index"><h1 class="visible">@set?.SiderbarP6</h1></a>
				</div>
			</div>
		</header>


		@RenderBody()

		<footer style="margin-top:0">
			<div class="container footer_container">
				<div class="column">
					<a asp-action="index" asp-controller="parfume"><h3>@setting?.Title1</h3></a>
					<p>@setting?.Title1Par1</p>
					<p>@setting?.Title1Par2</p>


				</div>
				<div class="column">
					<a asp-action="index" asp-controller="smoke"> <h3>@setting?.Title2</h3></a>
					<p>@setting?.Title2Par1</p>
					<p>@setting?.Title2Par2</p>


				</div>
				<div class="column responsive_last">
					<a asp-action="index" asp-controller="giftbox"><h3>@setting?.Title3</h3></a>
					<p>@setting?.Title3Par1</p>
					<p>@setting?.Title3Par2</p>

				</div>
				<div class="column responsive responsive_last">
					<a asp-action="index" asp-controller="about"> <h3>@setting?.Title4</h3></a>
					<p>@setting?.Title4Par1</p>
					<p>@setting?.Title4Par2</p>
				</div>
				<div class="column_last responsive">
					<h1>Abune ol</h1>

					<form asp-action="subscribe" asp-controller="home" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" novalidate>
						<div class="input_button">

							<input type="email" value="" name="EMAIL" class="email" placeholder="Email:" required>

							<button itype="submit" name="subscribe"><span>Abune Ol</span></button>

						</div>
					</form>

					<div class="socials">
						<a href="@setting?.Link1" target="_blank">
							<div class="social">
								@Html.Raw(setting?.FootIcon1)
							</div>
						</a>

						<a href="@setting?.Link2" target="_blank">
							<div class="social">
								@Html.Raw(setting?.FootIcon2)
							</div>
						</a>
						<a href="@setting?.Link3" target="_blank">
							<div class="social">
								@Html.Raw(setting?.FootIcon3)
							</div>
						</a>
						<a href="@setting?.Link4" target="_blank">
							<div class="social">
								@Html.Raw(setting?.FootIcon4)
							</div>


						</a>
					</div>
				</div>
			</div>
		</footer>

	</div>

	<script src="~/assets/js/index.js"></script>
	<script src="~/assets/js/indexp.js"></script>
	<script src="~/assets/js/detailp.js"></script>
	<script src="~/assets/js/detailt.js"></script>



	<script src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js"></script>
	<script>
		var swiper = new Swiper(".mySwiper", {
		  spaceBetween: 30,
		  effect: "fade",
		  navigation: {
			nextEl: ".swiper-button-next",
			prevEl: ".swiper-button-prev",
		  },
		  pagination: {
			el: ".swiper-pagination",
			clickable: true,
		  },
		});
	</script>
	<script>
		let slideIndex = 1;
		showSlides(slideIndex);

		function plusSlides(n) {
		  showSlides((slideIndex += n));
		}

		function currentSlide(n) {
		  showSlides((slideIndex = n));
		}

		function showSlides(n) {
		  let i;
		  let slides = document.getElementsByClassName("mySlides");
		  let dots = document.getElementsByClassName("dot");
		  if (n > slides.length) {
			slideIndex = 1;
		  }
		  if (n < 1) {
			slideIndex = slides.length;
		  }
		  for (i = 0; i < slides.length; i++) {
			slides[i].style.display = "none";
		  }
		  for (i = 0; i < dots.length; i++) {
			dots[i].className = dots[i].className.replace(" active", "");
		  }
		  slides[slideIndex - 1].style.display = "block";
		  dots[slideIndex - 1].className += " active";
		}
	</script>


	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
	$(document).ready(function () {
	  $(".star").click(function () {
		var rating = $(this).index() + 1;

		$(".star").removeClass("selected");
		$(".star").slice(0, rating).addClass("selected");
	  });
	});
</script>
<script>
	const Message = document.getElementById("message");
	if (Message != undefined) {
		const message = Message.innerHTML;
		if (message != "") {
			Swal.fire(`${message}`)
		}

	}</script>




