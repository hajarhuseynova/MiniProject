@model ProductViewModel

@if (!string.IsNullOrWhiteSpace((string)TempData["CommentTrue"]))
{
	<div style="display:none" id="message">@TempData["CommentTrue"]</div>
}
@if (!string.IsNullOrWhiteSpace((string)TempData["CommentFalse"]))
{
	<div style="display:none" id="message">@TempData["CommentFalse"]</div>
}


@{
	double totalRating = 0;
	double one = 0;
	double two = 0;
	double three = 0;

	double four = 0;
	double fifth = 0;

	foreach (var item in Model.Product.Comments.Where(x => !x.IsDeleted && x.isVisible))
	{
		totalRating += (item.Rating + 1);
		if (item.Rating == 0)
		{
			one++;
		}
		else if (item.Rating == 1)
		{
			two++;
		}
		else if (item.Rating == 2)
		{
			three++;
		}
		else if (item.Rating == 3)
		{
			four++;
		}
		else if (item.Rating == 4)
		{
			fifth++;
		}

	}
	double count = @Model.Product.Comments.Where(x => x.isVisible && !x.IsDeleted).Count();
	double avarage = 0;
	if (count != 0)
	{
		avarage = totalRating / count;
	}
}


<div class="detail_intro">
	<div class="container detail_intro_container">
		<div class="detail_left">
			<img src="~/assets/images/@Model.Product?.Image" />
		</div>
		<div class="detail_right">
			<h3>@Model.Product?.Title</h3>
			<p>@Model.Product?.Desc.</p>
			<p class="muted">Məhsul Kodu:@Model.Product?.ProductCode </p>
			<div class="bools">
				@if (Model.Product.IsStock == true)
				{
					<p class="stock">stokda/</p>
				}

				@if (Model.Product.IsNew == true)
				{
					<p class="stock">yeni/</p>
				}

				@if (Model.Product.IsTrend == true)
				{
					<p class="stock">trend/</p>
				}

				@if (Model.Product.IsDiscount == true)
				{
					<p class="stock">endirim: @Model.Product.DiscountPercentage %</p>
				}
			</div>
			<div class="priceStar">
				@if (Model.Product.IsDiscount == true)
				{
					<p class="price">@(int.Parse(Model.Product.SellPrice)-int.Parse(Model.Product.SellPrice)*Model.Product.DiscountPercentage/100) AZN</p>
				}
				else
				{
					<p class="price">@Model.Product.SellPrice AZN</p>
				}
				<div class="stars">
					@if (Model.Product.Comments.Where(x => !x.IsDeleted && x.isVisible).Count() > 0)
					{

						@for (var i = 0; i < Math.Floor(avarage); i++)
						{
							<span class="st">&#9733;</span>
						}
					}
					<p>@Model.Product.Comments.Where(x=>x.isVisible&&!x.IsDeleted).Count() rəy</p>
				</div>

			</div>
			<div class="line"></div>
			@if (Model.Product.Category.Name == "Parfum" || Model.Product.Category.Name == "Tester")
			{
				<div class="volume">
					<p>Həcm:</p>
					<form action="detailp.html">
						<input type="radio" checked value="@Model.Product.Volume" name="quantity" />
						<label for="">@Model.Product.Volume ML</label>
					</form>
				</div>
				<div class="line"></div>
			}
			<div class="input_button_delete">

				<form class="input_number" method="post" asp-controller="home" asp-action="AddBasket"  asp-route-id="@Model.Product.Id">
					<p class="minus" id="minus">-</p>
					<input type="number"
						   class="orangeinput specialJsInput"
						   id="countInput"
						   value="1"
						   type="number" />
					<p class="pilus" id="pilus">+</p>
				</form>

				<a class="addbasketdetail" asp-action="addbasket" asp-controller="home" asp-route-id="@Model.Product.Id">
					<button class="addtobasket">Səbətə Əlavə Et</button>
				</a>

			</div>
		</div>
	</div>
</div>
<div class="detail_info">
	<div class="container detail_info_container">
		<h1>Haqqında</h1>
		<p>
			@Model.Product.Info1
		</p>
		<p class="hide">
			@Model.Product.Info2
		</p>
	</div>
</div>
<div class="assesment">
	<div class="container assesment_container">
		<div class="left">
			<h3>@Model.Product.Title</h3>
			<h1>@Math.Floor(avarage)</h1>
			<div class="stars">
				@for (var i = 0; i < Math.Floor(avarage); i++)
				{
					<span class="st">&#9733;</span>
				}
			</div>
			<p>@Model.Product.Comments.Where(x=>x.isVisible&&!x.IsDeleted).Count() rəy</p>
		</div>
		<div class="middle">
			<div class="row">
				<span class="st">&#9733;</span>
				<p>5</p>
				<div class="hole">
					@{
						double fifthaverage = ((double)fifth / count) * 100;
					}
					@if (Model.Product.Comments.Where(x => !x.IsDeleted && x.isVisible).Count() != 0)
					{
						<div class="color" style="width:@(fifthaverage)%"></div>
					}
				</div>
			</div>
			<div class="row">
				<span class="st">&#9733;</span>

				<p>4</p>
				<div class="hole">
					@{
						double fouraverage = ((double)four / count) * 100;
					}
					@if (Model.Product.Comments.Where(x => !x.IsDeleted && x.isVisible).Count() != 0)
					{
						<div class="color" style="width:@(fouraverage)%"></div>
					}
				</div>
			</div>
			<div class="row">
				<span class="st">&#9733;</span>
				@{
					double threeaverage = ((double)three / count) * 100;
				}
				<p>3</p>
				<div class="hole">
					@if (Model.Product.Comments.Where(x => !x.IsDeleted && x.isVisible).Count() != 0)
					{
						<div class="color" style="width:@(threeaverage)%"></div>
					}
				</div>
			</div>
			<div class="row">
				<span class="st">&#9733;</span>
				@{
					double twoaverage = ((double)two / count) * 100;
				}
				<p>2</p>
				<div class="hole">
					@if (Model.Product.Comments.Where(x => !x.IsDeleted && x.isVisible).Count() != 0)
					{
						<div class="color" style="width:@(twoaverage)% "></div>
					}
				</div>
			</div>
			<div class="row">
				<span class="st">&#9733;</span>
				@{
					double oneaverage = ((double)one / count) * 100;
				}
				<p>1</p>
				<div class="hole">
					@if (Model.Product.Comments.Where(x => !x.IsDeleted && x.isVisible).Count() != 0)
					{
						<div class="color" style="width:@(oneaverage)%"></div>
					}
				</div>
			</div>
		</div>
		<div class="right">

			<form method="post" asp-controller="Comment" asp-action="AddComment">
				<input asp-for="@Model.Comment.Title" placeholder="Basliq" type="text" />
				<textarea asp-for="@Model.Comment.Desc" placeholder="Mətn daxil edin"
						  rows="4"
						  cols="40"></textarea>
				<input hidden asp-for="@Model.Comment.ProductId" type="text" value="@Model.Product.Id" name="Comment.ProductId" />
				<input hidden asp-for="@Model.Comment.Rating" type="number" id="review_score" name="Comment.Rating" />

				<div class="right_bottom">
					<p>Reytinq</p>
					<div class="rating">
						<span class="stard" data-value="1" id="star_1">&#9734;</span>
						<span class="stard" data-value="1" id="star_2">&#9734;</span>
						<span class="stard" data-value="1" id="star_3">&#9734;</span>
						<span class="stard" data-value="1" id="star_4">&#9734;</span>
						<span class="stard" data-value="1" id="star_5">&#9734;</span>
					</div>
					@if (User.Identity.IsAuthenticated && User.IsInRole("User"))
					{
						<a><button type="submit">Göndər</button></a>
					}
					else
					{
						<a asp-action="login" asp-controller="account"><button>Göndər</button></a>


					}
				</div>

			</form>
		</div>
	</div>
</div>
@if (Model.Product.Comments.Where(x => !x.IsDeleted && x.isVisible).Count() != 0)
{
	<div class="comments">
		<div class="container comments_container">

			@foreach (var item in Model.Product.Comments.Where(x => !x.IsDeleted))
			{
				{
					item.Rating += 1;
				}
				if (@item.isVisible == true)
				{
					<div class="line"></div>
					<div class="comment">
						<div class="left">
							<h3>@item.AppUser.Name</h3>
							<div class="left_stars">
								@for (var i = 0; i < item.Rating; i++)
								{
									<span class="st">&#9733;</span>
								}
							</div>
						</div>
						<div class="middle">
							<h3>@item.Title</h3>
							<p>
								@item.Desc
							</p>
						</div>
						<div class="right">
							<p>@item.CreatedDate.ToString("MM:dd:yyyy")</p>

						</div>
					</div>
				}

			}

			<div class="line"></div>
		</div>
	</div>
}
<div class="products">
	<div class="container products_container">
		<h1>Yeni Mehsullar</h1>
		<div class="newproducts">
			@foreach (var item in Model.Products.Where(x => x.Category.Name == "Parfum" && x.IsNew == true).Take(4))
			{

				<div class="product">
					<a asp-action="detail" asp-route-id="@item.Id" asp-controller="product">
						<img src="~/assets/images/@item.Image"
						 alt="productImage" />
					</a>
					<div class="new">Yeni</div>
					<p class="def">@item.Title</p>
					<p class="cat">@item.Brand.Name</p>
					<div class="price_star">
						@if (item.IsDiscount == true)
						{
							<p class="price">@(int.Parse(item.SellPrice)-int.Parse(item.SellPrice)*item.DiscountPercentage/100) AZN</p>
						}
						else
						{
							<p class="price">@item.SellPrice AZN</p>
						}
						<a asp-action="addbasket" asp-controller="home" asp-route-id="@item.Id" class="add-basket-product">
							<button style="width:80px">Əlavə et</button>
						</a>
					</div>
				</div>

			}

		</div>
	</div>
</div>
<div style="margin-bottom:40px" class="functions">
	<div class="container functions_container">
		@await Html.PartialAsync("_FunctionPartialView",Model.Functions.Take(4).ToList())

	</div>
</div>

<script>

	var star=Array.from(document.querySelectorAll(".stard"));
	var rating=document.querySelector("#review_score");
	star.forEach((staritem)=>{
		staritem.addEventListener("click",()=>{
			var starindex=star.indexOf(staritem);
			for(let index=0;index<star.length;index++){
				if(index<=starindex){
					star[index].innerHTML="&#9733;"
				}
				else{
					star[index].innerHTML="&#9734;"
				}
				rating.value=starindex;
			}
	})
	})
</script>


<script>
	const products = document.querySelectorAll(".add-basket-product");
	products.forEach(prod => {
		prod.addEventListener("click", (e) => {
			e.preventDefault();
			let href = prod.getAttribute("href");
			let TotalPrice = 0;

			fetch(href)
				.then(x => x.json())
				.then(x => {
				 if(x.status==200){
					 fetch("/home/getallbaskets")
					 .then(res=>res.json())
					 .then(b=>{
							basketItems.innerHTML=""
					b.forEach(basket => {

						TotalPrice += basket.price*basket.count;
							let basketView=`
								<div class="basketItem unvis">
											<div class="item_left">
												<img src="/assets/images/${basket.image}" />
											</div>
											<div class="item_right">
												<div class="spans">
													<span>${basket.name}</span>
													<span>${basket.volume} ML</span>
													<span>${basket.count} * ${basket.price} AZN</span>
												</div>
												<div class="deleteimage">
													<a href="/parfume/RemoveBasket/${basket.productId}" data-id="">
														<i class="fa-solid fa-x"></i>
													</a>
												</div>
											</div>
										</div>
									`
						basketItems.innerHTML += basketView;

					})

					totalPriceElement.innerHTML =`${TotalPrice} AZN`;
				



					const Toast = Swal.mixin({
						toast: true,
						position: 'top-end',
						showConfirmButton: false,
						timer: 3000,
						timerProgressBar: true,
						didOpen: (toast) => {
							toast.addEventListener('mouseenter', Swal.stopTimer)
							toast.addEventListener('mouseleave', Swal.resumeTimer)
						}
					})

					Toast.fire({
						icon: 'success',
						title: `Elave edildi!`
					})

					 })
				 }

				})
		})
	})

</script>

<script>
		   const addbasketdetail=document.querySelector(".addbasketdetail");
		   const specialJsInput=document.querySelector(".specialJsInput");
		   const totalPriceElement = document.getElementById("totalPrice");

	addbasketdetail.addEventListener("click", (e) => {
		   e.preventDefault();

		   let href = addbasketdetail.getAttribute("href");
		   href=href+`?count=${specialJsInput.value}`
		   let TotalPrice = 0;

		   fetch(href)
			   .then(x => x.json())
			   .then(x => {
				if(x.status==200){
					fetch("/home/getallbaskets")
					.then(res=>res.json())
					.then(b=>{
						   basketItems.innerHTML=""
				   b.forEach(basket => {
					   TotalPrice += basket.price*basket.count;
						   let basketView=`
										   <div class="basketItem unvis">
										   <div class="item_left">
											   <img src="/assets/images/${basket.image}" />
										   </div>
										   <div class="item_right">
											   <div class="spans">
												   <span>${basket.name}</span>
												   <span>${basket.count} * ${basket.price} AZN</span>
											   </div>
											   <div class="deleteimage">
												   <a href="/home/RemoveBasket/${basket.productId}" data-id="">
													   <i class="fa-solid fa-x"></i>
												   </a>
											   </div>
										   </div>
									   </div>
									   `
					   basketItems.innerHTML += basketView;

				   })

					totalPriceElement.innerHTML =`${TotalPrice} AZN`;


					const Toast = Swal.mixin({
					   toast: true,
					   position: 'top-end',
					   showConfirmButton: false,
					   timer: 3000,
					   timerProgressBar: true,
					   didOpen: (toast) => {
						   toast.addEventListener('mouseenter', Swal.stopTimer)
						   toast.addEventListener('mouseleave', Swal.resumeTimer)
					   }
				   })

				   Toast.fire({
					   icon: 'success',
					   title: `Əlavə edildi!`
				   })



					})
				}

			   })
	 })

</script>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
	const Message = document.getElementById("message");
	if (Message != undefined) {
		const message = Message.innerHTML;
		if (message != "") {
			Swal.fire(`${message}`)
		}
	}
</script>