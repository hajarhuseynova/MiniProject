@inject Parfume.App.Services.İnterfaces.ISettingService settingService
@{
	SettingFooter? setting = await settingService.Get();
	SettingNavbar? set = await settingService.GetAll();
}

@inject Parfume.App.Services.İnterfaces.IBasketService basketservice
@{
	List<Parfume.App.ViewModels.BasketItemViewModel> basketItemViewModels = await basketservice.GetAllBaskets();
	int TotalPrice = 0;
 }
 @if (!string.IsNullOrWhiteSpace((string)TempData["emptyBasket"]))
{
    <div style="display:none" id="message">@TempData["emptyBasket"]</div>
}
@if (!string.IsNullOrWhiteSpace((string)TempData["OrderCreated"]))
{
    <div style="display:none" id="message">@TempData["OrderCreated"]</div>
}
@if (!string.IsNullOrWhiteSpace((string)TempData["EmailRegex"]))
{
	<div style="display:none" id="message">@TempData["EmailRegex"]</div>
}

@if (!string.IsNullOrWhiteSpace((string)TempData["EmailNull"]))
{
	<div style="display:none" id="message">@TempData["EmailNull"]</div>
}

@if (!string.IsNullOrWhiteSpace((string)TempData["EmailRepeat"]))
{
	<div style="display:none" id="message">@TempData["EmailRepeat"]</div>
}

@if (!string.IsNullOrWhiteSpace((string)TempData["Subs"]))
{
	<div style="display:none" id="message">@TempData["Subs"]</div>
}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<link rel="preconnect" href="https://fonts.googleapis.com" />
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
	<link bordertps: //fonts.googleapis.com/css2?family =Space+Mono:ital,wght@0,400;0,700;1,400;1,700&family =Work+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display =swap"
		  rel="stylesheet" />
	<link rel="stylesheet"
		  href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css" />
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />

	<link rel="stylesheet" href="~/assets/css/style.css">

	<title>Document</title>

</head>
<body>
	<div class="root">
		<header class="navbar">
			<div class="navbar_container">
				<div class="navbar_top">
					<div class="navbar_left">
						<div class="navbar_menu">
							<a>
								<img src="~/assets/images/@set?.Delete"
									 id="sidebarDelete"
									 class="hideImage"
									 style="margin-top: 6px" />
								<img src="~/assets/images/@set?.Hamburger"
									 id="burger"
									 class="addimage" />
							</a>

							<a class="hide" id="menu">Menu</a>
							<a asp-controller="home" asp-action="index">
								<img class="hidden" src="~/assets/images/@set?.Logo" />
							</a>
						</div>
					</div>
					<div class="navbar_middle">
						<a asp-controller="home" asp-action="index"> <img src="~/assets/images/@set?.Logo" /></a>
					</div>
					<div class="navbar_right">
						<div class="navbar_icons">

							@if (User.Identity.IsAuthenticated && User.IsInRole("User"))
							{
								<a asp-controller="account"
							   asp-action="info">@Html.Raw(set?.Icon1) <span style="margin-left:0px">@User.Identity.Name</span></a>
								<a asp-controller="account"
							   asp-action="logout"> <i class="fa-solid fa-arrow-right-from-bracket"></i> <span style="margin-left:0px">LogOut</span></a>

							}
							else
							{
								<a asp-controller="account"
							   asp-action="login">
									@Html.Raw(set?.Icon1)<span style="margin-left:5px">Giriş</span>
								</a>
								<a asp-controller="account"
							   asp-action="register">
									@Html.Raw(set?.Icon2)<span style="margin-left:5px">Qeydiyyat</span>
								</a>

							}
							<a id="basketclick">
								@Html.Raw(set?.Icon3)<span style="margin-left:5px">Səbət</span>
							</a>

						<div class="basket_header_inner">
						
                                	<div class="basketItems ">
									@foreach (var item in basketItemViewModels)
									{
										
										{
											TotalPrice += @item.Count * @item.Price;
										}
										
										<div class="basketItem unvis">
											<div class="item_left">
												<img src="~/assets/images/@item?.Image" />
											</div>
											<div class="item_right">
												<div class="spans">
											<span>@item?.Name</span>
										
													<span>
														@item?.Count * @item?.Price AZN
													</span>
												</div>
												<div class="deleteimage">
													<a asp-controller="home" asp-action="RemoveBasket" asp-route-id="@item?.ProductId" class="remove-basket-item">
														<i class="fa-solid fa-x"></i>
													</a>
												</div>
											</div>
										</div>
									}
								</div>
								<div class="basket_buttons ">
									<span id="totalPrice">Total:@TotalPrice AZN</span>
									<div class="buttonsBasketDiv">
                                        <a asp-action="index" asp-controller="legacy"><button>Rəsmiləşdir</button></a>
                                        <a asp-action="checkout" asp-controller="order"><button>Səbət</button></a>
                                    </div>
								</div>
                            }
						</div>

						</div>
					</div>
				</div>
				<div class="hideDiv navbar_bottom">
					<a asp-controller="about" asp-action="index"><h1 class="visible">@set?.SiderbarP1</h1></a>
					<a asp-controller="parfume" asp-action="index"><h1 class="visible">@set?.SiderbarP2</h1></a>
					<a asp-controller="smoke" asp-action="index"><h1 class="visible">@set?.SiderbarP3</h1></a>
					<a asp-controller="giftbox" asp-action="index"><h1 class="visible">@set?.SiderbarP4</h1></a>
					<a asp-controller="tester" asp-action="index"><h1 class="visible">@set?.SiderbarP5</h1></a>
					<a asp-controller="contact" asp-action="index"><h1 class="visible">@set?.SiderbarP6</h1></a>
				</div>
			</div>
		</header>


		@RenderBody()
       
        <footer style="margin-top: 0">
        <div class="container footer_container">
          <div class="column">
            <a asp-controller="parfume" asp-action="index"><h3>@setting?.Title1</h3></a>
            <p>@setting?.Title1Par1</p>
            <p>@setting?.Title1Par2</p>
          </div>
          <div class="column">
            <a asp-controller="smoke" asp-action="index"> <h3>@setting?.Title2</h3></a>
            <p>@setting?.Title2Par1</p>
            <p>@setting?.Title2Par2</p>
          </div>
          <div class="column responsive_last">
            <a asp-controller="about" asp-action="index"><h3>@setting?.Title3</h3></a>
            <p>@setting?.Title3Par1</p>
            <p>@setting?.Title3Par2</p>
          </div>
          <div class="column responsive responsive_last">
            <a asp-controller="giftbox" asp-action="index"> <h3>@setting?.Title4</h3></a>
            <p>@setting?.Title4Par1</p>
            <p>@setting?.Title4Par2</p>
          </div>
          <div class="column_last responsive">
            <a asp-controller="home" asp-action="index"><img src="~/assets/images/@set.Logo" /></a>
             <div class="socials">
              <a
                href="@setting.Link1"
              >
                <div class="social">@Html.Raw(setting?.FootIcon1)</div
              ></a>

              <a
                href="@setting.Link2"
              >
                <div class="social">@Html.Raw(setting?.FootIcon2)</div
              ></a>
              <a
                href="@setting.Link3"
              >
                <div class="social">@Html.Raw(setting?.FootIcon3)</div
              ></a>
              <a
                href="@setting.Link4"
              >
                <div class="social">@Html.Raw(setting?.FootIcon4)</div
              ></a>
            </div>
          </div>
        </div>
      </footer>

	</div>

	<script src="~/assets/js/index.js"></script>
	<script src="~/assets/js/indexp.js"></script>
	<script src="~/assets/js/detailp.js"></script>
	<script src="~/assets/js/detailt.js"></script>



	<script src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js"></script>
	<script>
		var swiper = new Swiper(".mySwiper", {
		  spaceBetween: 30,
		  effect: "fade",
		  navigation: {
			nextEl: ".swiper-button-next",
			prevEl: ".swiper-button-prev",
		  },
		  pagination: {
			el: ".swiper-pagination",
			clickable: true,
		  },
		});
	</script>
	<script>
		let slideIndex = 1;
		showSlides(slideIndex);

		function plusSlides(n) {
		  showSlides((slideIndex += n));
		}

		function currentSlide(n) {
		  showSlides((slideIndex = n));
		}

		function showSlides(n) {
		  let i;
		  let slides = document.getElementsByClassName("mySlides");
		  let dots = document.getElementsByClassName("dot");
		  if (n > slides.length) {
			slideIndex = 1;
		  }
		  if (n < 1) {
			slideIndex = slides.length;
		  }
		  for (i = 0; i < slides.length; i++) {
			slides[i].style.display = "none";
		  }
		  for (i = 0; i < dots.length; i++) {
			dots[i].className = dots[i].className.replace(" active", "");
		  }
		  slides[slideIndex - 1].style.display = "block";
		  dots[slideIndex - 1].className += " active";
		}
	</script>


	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <script>
	const Message = document.getElementById("message");
	if (Message != undefined) {
		const message = Message.innerHTML;
		if (message != "") {
			Swal.fire(`${message}`)
		}
	}
 </script>
	 <script>
      !(function (t, i, e, s) {
        function o(i, e) {
          var h = this;
          "object" == typeof e &&
            (delete e.refresh, delete e.render, t.extend(this, e)),
            (this.$element = t(i)),
            !this.imageSrc &&
              this.$element.is("img") &&
              (this.imageSrc = this.$element.attr("src"));
          var r = (this.position + "").toLowerCase().match(/\S+/g) || [];
          if (
            (r.length < 1 && r.push("center"),
            1 == r.length && r.push(r[0]),
            ("top" != r[0] &&
              "bottom" != r[0] &&
              "left" != r[1] &&
              "right" != r[1]) ||
              (r = [r[1], r[0]]),
            this.positionX !== s && (r[0] = this.positionX.toLowerCase()),
            this.positionY !== s && (r[1] = this.positionY.toLowerCase()),
            (h.positionX = r[0]),
            (h.positionY = r[1]),
            "left" != this.positionX &&
              "right" != this.positionX &&
              (isNaN(parseInt(this.positionX))
                ? (this.positionX = "center")
                : (this.positionX = parseInt(this.positionX))),
            "top" != this.positionY &&
              "bottom" != this.positionY &&
              (isNaN(parseInt(this.positionY))
                ? (this.positionY = "center")
                : (this.positionY = parseInt(this.positionY))),
            (this.position =
              this.positionX +
              (isNaN(this.positionX) ? "" : "px") +
              " " +
              this.positionY +
              (isNaN(this.positionY) ? "" : "px")),
            navigator.userAgent.match(/(iPod|iPhone|iPad)/))
          )
            return (
              this.imageSrc &&
                this.iosFix &&
                !this.$element.is("img") &&
                this.$element.css({
                  backgroundImage: "url(" + this.imageSrc + ")",
                  backgroundSize: "cover",
                  backgroundPosition: this.position,
                }),
              this
            );
          if (navigator.userAgent.match(/(Android)/))
            return (
              this.imageSrc &&
                this.androidFix &&
                !this.$element.is("img") &&
                this.$element.css({
                  backgroundImage: "url(" + this.imageSrc + ")",
                  backgroundSize: "cover",
                  backgroundPosition: this.position,
                }),
              this
            );
          this.$mirror = t("<div />").prependTo(this.mirrorContainer);
          var a = this.$element.find(">.parallax-slider"),
            n = !1;
          0 == a.length
            ? (this.$slider = t("<img />").prependTo(this.$mirror))
            : ((this.$slider = a.prependTo(this.$mirror)), (n = !0)),
            this.$mirror.addClass("parallax-mirror").css({
              visibility: "hidden",
              zIndex: this.zIndex,
              position: "fixed",
              top: 0,
              left: 0,
              overflow: "hidden",
            }),
            this.$slider.addClass("parallax-slider").one("load", function () {
              (h.naturalHeight && h.naturalWidth) ||
                ((h.naturalHeight = this.naturalHeight || this.height || 1),
                (h.naturalWidth = this.naturalWidth || this.width || 1)),
                (h.aspectRatio = h.naturalWidth / h.naturalHeight),
                o.isSetup || o.setup(),
                o.sliders.push(h),
                (o.isFresh = !1),
                o.requestRender();
            }),
            n || (this.$slider[0].src = this.imageSrc),
            ((this.naturalHeight && this.naturalWidth) ||
              this.$slider[0].complete ||
              a.length > 0) &&
              this.$slider.trigger("load");
        }
        !(function () {
          for (
            var t = 0, e = ["ms", "moz", "webkit", "o"], s = 0;
            s < e.length && !i.requestAnimationFrame;
            ++s
          )
            (i.requestAnimationFrame = i[e[s] + "RequestAnimationFrame"]),
              (i.cancelAnimationFrame =
                i[e[s] + "CancelAnimationFrame"] ||
                i[e[s] + "CancelRequestAnimationFrame"]);
          i.requestAnimationFrame ||
            (i.requestAnimationFrame = function (e) {
              var s = new Date().getTime(),
                o = Math.max(0, 16 - (s - t)),
                h = i.setTimeout(function () {
                  e(s + o);
                }, o);
              return (t = s + o), h;
            }),
            i.cancelAnimationFrame ||
              (i.cancelAnimationFrame = function (t) {
                clearTimeout(t);
              });
        })(),
          t.extend(o.prototype, {
            speed: 0.2,
            bleed: 0,
            zIndex: -100,
            iosFix: !0,
            androidFix: !0,
            position: "center",
            overScrollFix: !1,
            mirrorContainer: "body",
            refresh: function () {
              (this.boxWidth = this.$element.outerWidth()),
                (this.boxHeight = this.$element.outerHeight() + 2 * this.bleed),
                (this.boxOffsetTop = this.$element.offset().top - this.bleed),
                (this.boxOffsetLeft = this.$element.offset().left),
                (this.boxOffsetBottom = this.boxOffsetTop + this.boxHeight);
              var t,
                i = o.winHeight,
                e = o.docHeight,
                s = Math.min(this.boxOffsetTop, e - i),
                h = Math.max(this.boxOffsetTop + this.boxHeight - i, 0),
                r = (this.boxHeight + (s - h) * (1 - this.speed)) | 0,
                a = ((this.boxOffsetTop - s) * (1 - this.speed)) | 0;
              r * this.aspectRatio >= this.boxWidth
                ? ((this.imageWidth = (r * this.aspectRatio) | 0),
                  (this.imageHeight = r),
                  (this.offsetBaseTop = a),
                  (t = this.imageWidth - this.boxWidth),
                  "left" == this.positionX
                    ? (this.offsetLeft = 0)
                    : "right" == this.positionX
                    ? (this.offsetLeft = -t)
                    : isNaN(this.positionX)
                    ? (this.offsetLeft = (-t / 2) | 0)
                    : (this.offsetLeft = Math.max(this.positionX, -t)))
                : ((this.imageWidth = this.boxWidth),
                  (this.imageHeight = (this.boxWidth / this.aspectRatio) | 0),
                  (this.offsetLeft = 0),
                  (t = this.imageHeight - r),
                  "top" == this.positionY
                    ? (this.offsetBaseTop = a)
                    : "bottom" == this.positionY
                    ? (this.offsetBaseTop = a - t)
                    : isNaN(this.positionY)
                    ? (this.offsetBaseTop = (a - t / 2) | 0)
                    : (this.offsetBaseTop = a + Math.max(this.positionY, -t)));
            },
            render: function () {
              var t = o.scrollTop,
                i = o.scrollLeft,
                e = this.overScrollFix ? o.overScroll : 0,
                s = t + o.winHeight;
              this.boxOffsetBottom > t && this.boxOffsetTop <= s
                ? ((this.visibility = "visible"),
                  (this.mirrorTop = this.boxOffsetTop - t),
                  (this.mirrorLeft = this.boxOffsetLeft - i),
                  (this.offsetTop =
                    this.offsetBaseTop - this.mirrorTop * (1 - this.speed)))
                : (this.visibility = "hidden"),
                this.$mirror.css({
                  transform:
                    "translate3d(" +
                    this.mirrorLeft +
                    "px, " +
                    (this.mirrorTop - e) +
                    "px, 0px)",
                  visibility: this.visibility,
                  height: this.boxHeight,
                  width: this.boxWidth,
                }),
                this.$slider.css({
                  transform:
                    "translate3d(" +
                    this.offsetLeft +
                    "px, " +
                    this.offsetTop +
                    "px, 0px)",
                  position: "absolute",
                  height: this.imageHeight,
                  width: this.imageWidth,
                  maxWidth: "none",
                });
            },
          }),
          t.extend(o, {
            scrollTop: 0,
            scrollLeft: 0,
            winHeight: 0,
            winWidth: 0,
            docHeight: 1 << 30,
            docWidth: 1 << 30,
            sliders: [],
            isReady: !1,
            isFresh: !1,
            isBusy: !1,
            setup: function () {
              function s() {
                if (p == i.pageYOffset) return i.requestAnimationFrame(s), !1;
                (p = i.pageYOffset), h.render(), i.requestAnimationFrame(s);
              }
              if (!this.isReady) {
                var h = this,
                  r = t(e),
                  a = t(i),
                  n = function () {
                    (o.winHeight = a.height()),
                      (o.winWidth = a.width()),
                      (o.docHeight = r.height()),
                      (o.docWidth = r.width());
                  },
                  l = function () {
                    var t = a.scrollTop(),
                      i = o.docHeight - o.winHeight,
                      e = o.docWidth - o.winWidth;
                    (o.scrollTop = Math.max(0, Math.min(i, t))),
                      (o.scrollLeft = Math.max(0, Math.min(e, a.scrollLeft()))),
                      (o.overScroll = Math.max(t - i, Math.min(t, 0)));
                  };
                a
                  .on("resize.px.parallax load.px.parallax", function () {
                    n(), h.refresh(), (o.isFresh = !1), o.requestRender();
                  })
                  .on("scroll.px.parallax load.px.parallax", function () {
                    l(), o.requestRender();
                  }),
                  n(),
                  l(),
                  (this.isReady = !0);
                var p = -1;
                s();
              }
            },
            configure: function (i) {
              "object" == typeof i &&
                (delete i.refresh,
                delete i.render,
                t.extend(this.prototype, i));
            },
            refresh: function () {
              t.each(this.sliders, function () {
                this.refresh();
              }),
                (this.isFresh = !0);
            },
            render: function () {
              this.isFresh || this.refresh(),
                t.each(this.sliders, function () {
                  this.render();
                });
            },
            requestRender: function () {
              var t = this;
              t.render(), (t.isBusy = !1);
            },
            destroy: function (e) {
              var s,
                h = t(e).data("px.parallax");
              for (h.$mirror.remove(), s = 0; s < this.sliders.length; s += 1)
                this.sliders[s] == h && this.sliders.splice(s, 1);
              t(e).data("px.parallax", !1),
                0 === this.sliders.length &&
                  (t(i).off(
                    "scroll.px.parallax resize.px.parallax load.px.parallax"
                  ),
                  (this.isReady = !1),
                  (o.isSetup = !1));
            },
          });
        var h = t.fn.parallax;
        (t.fn.parallax = function (s) {
          return this.each(function () {
            var h = t(this),
              r = "object" == typeof s && s;
            this == i || this == e || h.is("body")
              ? o.configure(r)
              : h.data("px.parallax")
              ? "object" == typeof s && t.extend(h.data("px.parallax"), r)
              : ((r = t.extend({}, h.data(), r)),
                h.data("px.parallax", new o(this, r))),
              "string" == typeof s &&
                ("destroy" == s ? o.destroy(this) : o[s]());
          });
        }),
          (t.fn.parallax.Constructor = o),
          (t.fn.parallax.noConflict = function () {
            return (t.fn.parallax = h), this;
          }),
          t(function () {
            t('[data-parallax="scroll"]').parallax();
          });
      })(jQuery, window, document);
    </script>
    <script>
      let mybutton = document.getElementById("myBtn");

      window.onscroll = function () {
        scrollFunction();
      };

      function scrollFunction() {
        if (
          document.body.scrollTop > 20 ||
          document.documentElement.scrollTop > 20
        ) {
          mybutton.style.display = "block";
        } 
      }

      function topFunction() {
        if (
          document.body.scrollTop > 0 ||
          document.documentElement.scrollTop > 0
        ) {
          document.body.scrollIntoView({
            behavior: "smooth",
            block: "start",
          });
        }
      }
    </script>

